from vmapplet.sequences import terminal_fate
from vmapplet.physics import rotate_frame_at_branch
from vmapplet.srandom import boolean_event
from vmapplet.organs import (
    MetamerData,
    AppleFruit,
    AppleLeaf,
    ApexData,
    Wood,
    Internode
)

wood = Wood(**options.wood)
internode = Internode(**options.internode)

zone_converter = {
    0: 'dormant_start',
    1: 'small',
    2: 'diffuse',
    3: 'medium',
    4: 'floral',
    5: 'dormant_end',
    None: 'None'
}

module apex(apex_data): scale=2
module branch(): scale=1
module growth_unit(growth_unit_data): scale=1
module axiom()
module metamer(metamer_data): scale=2
module root(): scale=1


ignore: growth_unit

production:

metamer(m) < apex(a):
    if a.sequence_position > 0 and m.age >= options.internode.plastochron:
        a.sequence_position -= 1
        floral = a.sequence_position == 0 and a.parent_observation == 'floral'
        if m.year == simulation.date.year:
            number = m.number + 1
        else:
            number = 1
        mn = MetamerData(
            floral=floral,
            number=number,
            hlu=a.hlu,
            zone=a.sequence[a.sequence_position][0],
            observation=a.get_observation_from_sequence(),
            parent_observation=a.parent_observation,
            parent_unit_id=a.parent_unit_id,
            parent_fbr_id=a.parent_fbr_id,
            parent_tree_id=a.parent_tree_id,
            p_angle=m.phyllotactic_angle + tree.phyllotactic_angle,
            b_angle=tree.branching_angle,
            wood=wood,
            internode=internode,
            fruit=AppleFruit(**options.fruit),
            leaf=AppleLeaf(**options.leaf)
        )
        mn.trunk = a.trunk
        mn.year = simulation.date.year
        mn.sylleptic = a.sylleptic
        if not 'growth_pause' in simulation.active_events():
            produce metamer(mn) apex(a)
        else:
            a.sequence_position = 0
            produce apex(a)
    else:
        produce apex(a)


apex(a):
    if a.sequence_position > 0:
        a.sequence_position -= 1
        floral = a.sequence_position == 0 and a.parent_observation == 'floral'
        m = MetamerData(
            floral=floral,
            number=1,
            hlu=a.hlu,
            zone=a.sequence[a.sequence_position][0],
            observation=a.get_observation_from_sequence(),
            parent_observation= a.parent_observation,
            parent_unit_id=a.parent_unit_id,
            parent_fbr_id=a.parent_fbr_id,
            parent_tree_id=a.parent_tree_id,
            p_angle=tree.phyllotactic_angle,
            b_angle=tree.branching_angle,
            wood=wood,
            internode=internode,
            fruit=AppleFruit(**options.fruit),
            leaf=AppleLeaf(**options.leaf)
        )
        m.trunk = a.trunk
        m.year = simulation.date.year
        m.sylleptic = a.sylleptic
        if not 'growth_pause' in simulation.active_events():
            produce metamer(m) apex(a)
        else:
            a.sequence_position = 0
            produce apex(a)
    else:
        produce apex(a)

metamer(m) > metamer(mr) apex(a):
    # case of a floral immediate lateral axis: should be treated as laterals and not as terminals
    if not m.developped and a.parent_observation == 'floral' and a.sequence_position == 0:
        m.developped = True
        if boolean_event(tree.inflorescence_death_probability):
            produce metamer(m)
        m.branching_angle = tree.floral_branching_angle
        hlu = rotate_frame_at_branch(m.hlu, m.branching_angle, m.phyllotactic_angle);
        apex_parameters = {
            **options.apex,
            **options.markov
        }
        sylleptic_apex = ApexData(hlu, terminal_fate(simulation.year_no, 'floral', options.markov.terminal_fate), **apex_parameters)
        sylleptic_apex.parent_observation = 'floral'
        if m.parent_fbr_id == 0:
            tree.first_branches += 1
            # The parent_fbr_id ranges from 0 to tree.first_branches (rather than to tree.frist-branches-1)
            # This is because, the trunk is regarded by branch 0 as default
            # Thus the id of the first real branch should be 1
            sylleptic_apex.parent_fbr_id = tree.first_branches
        else:
            sylleptic_apex.parent_fbr_id = m.parent_fbr_id
        produce metamer(m) SB() branch() apex(sylleptic_apex) EB()

metamer(m):
    bud_break = 'bud_break' in simulation.active_events()
    if options.general.ruptures and rupture(m.cumulated_torque, m.radius, wood._modulus_of_rupture):
        print('EXTRAORDINARY EVENT: There was a rupture in the system.\n')
        produce Label('Cut') Cut()
    if (
        m.observation!= 'dormant' and
        not m.developped and (
            simulation.events.bud_break.active or (
                m.observation in ('small', 'medium', 'large') and
                m.parent_observation == 'trunk' and
                m.sylleptic is True
            )
        )
    ):
        m.developped = True
        hlu = rotate_frame_at_branch(m.hlu, m.branching_angle, m.phyllotactic_angle)
        apex_parameters = {
            **options.apex,
            **options.markov
        }
        a = ApexData(hlu, m.observation, **apex_parameters)
        if m.parent_fbr_id == 0:
            tree.first_branches +=1
            # The parent_fbr_id ranges from 0 to tree.first_branches (rather than to tree.frist-branches-1)
            # This is because, the trunk is regarded by branch 0 as default
            # Thus the id of the first real branch should be 1
            a.parent_fbr_id = tree.first_branches
        else:
            a.parent_fbr_id = m.parent_fbr_id
        produce metamer(m) SB() branch() apex(a) EB()
    else:
        produce metamer(m)

endlsystem
